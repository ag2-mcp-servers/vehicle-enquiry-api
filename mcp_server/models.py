# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-28T14:34:33+00:00

from __future__ import annotations

from datetime import date
from enum import Enum
from typing import List, Optional

from pydantic import BaseModel, Field


class Errors(BaseModel):
    code: Optional[str] = Field(
        None, description='DVLA reference code', examples=['105']
    )
    detail: Optional[str] = Field(
        None,
        description='A meaningful description of the error which has occurred',
        examples=['Invalid format for field - vehicle registration number'],
    )
    status: Optional[str] = Field(None, examples=['400'])
    title: str = Field(..., description='Error title', examples=['Invalid vrn number'])


class MotStatus(Enum):
    No_details_held_by_DVLA = 'No details held by DVLA'
    No_results_returned = 'No results returned'
    Not_valid = 'Not valid'
    Valid = 'Valid'


class TaxStatus(Enum):
    Not_Taxed_for_on_Road_Use = 'Not Taxed for on Road Use'
    SORN = 'SORN'
    Taxed = 'Taxed'
    Untaxed = 'Untaxed'


class Vehicle(BaseModel):
    artEndDate: Optional[date] = Field(
        None,
        description='Additional Rate of Tax End Date, format: YYYY-MM-DD',
        examples=['2007-12-25'],
    )
    co2Emissions: Optional[int] = Field(
        None,
        description='Carbon Dioxide emissions in grams per kilometre',
        examples=[0],
    )
    colour: Optional[str] = Field(None, description='Vehicle colour', examples=['Blue'])
    dateOfLastV5CIssued: Optional[date] = Field(
        None, description='Date of last V5C issued', examples=['2016-12-25']
    )
    engineCapacity: Optional[int] = Field(
        None, description='Engine capacity in cubic centimetres', examples=[1796]
    )
    euroStatus: Optional[str] = Field(
        None,
        description='Euro Status (Dealer / Customer Provided (new vehicles))',
        examples=['Euro 5'],
    )
    fuelType: Optional[str] = Field(
        None, description='Fuel type (Method of Propulsion)', examples=['PETROL']
    )
    make: Optional[str] = Field(None, description='Vehicle make', examples=['ROVER'])
    markedForExport: Optional[bool] = Field(
        None, description='True only if vehicle has been export marked', examples=[True]
    )
    monthOfFirstDvlaRegistration: Optional[date] = Field(
        None, description='Month of First DVLA Registration', examples=['2011-11']
    )
    monthOfFirstRegistration: Optional[date] = Field(
        None, description='Month of First Registration', examples=['2012-12']
    )
    motExpiryDate: Optional[date] = Field(
        None, description='Mot Expiry Date', examples=['2008-12-25']
    )
    motStatus: Optional[MotStatus] = Field(
        None,
        description='MOT Status of the vehicle',
        examples=['No details held by DVLA'],
    )
    realDrivingEmissions: Optional[str] = Field(
        None, description='Real Driving Emissions value', examples=['1']
    )
    registrationNumber: str = Field(
        ..., description='Registration number of the vehicle', examples=['WN67DSO']
    )
    revenueWeight: Optional[int] = Field(
        None, description='Revenue weight in kilograms', examples=[1640]
    )
    taxDueDate: Optional[date] = Field(
        None,
        description='Date of tax liablity, Used in calculating licence information presented to user',
        examples=['2017-12-25'],
    )
    taxStatus: Optional[TaxStatus] = Field(
        None, description='Tax status of the vehicle', examples=['Untaxed']
    )
    typeApproval: Optional[str] = Field(
        None, description='Vehicle Type Approval Category', examples=['N1']
    )
    wheelplan: Optional[str] = Field(
        None, description='Vehicle wheel plan', examples=['NON STANDARD']
    )
    yearOfManufacture: Optional[int] = Field(
        None, description='Year of Manufacture', examples=[2004]
    )


class VehicleRequest(BaseModel):
    registrationNumber: Optional[str] = None


class ErrorResponse(BaseModel):
    errors: Optional[List[Errors]] = None
